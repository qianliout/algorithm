package main

import (
	"fmt"
)

func main() {
	fmt.Println(beautifulPartitions2("23542185131", 3, 2))
	fmt.Println(beautifulPartitions("23542185131", 3, 2))
	fmt.Println(beautifulPartitions
	fmt.Println(beautifulPartitions
}

// 还超时,要剪枝才得行
func beautifulPartitions(s string, k int, m int) int {
	n := len(s)
	ss := []byte(s)
	f := make([][]int, n+1)
	for i := range f {
		f[i] = make([]int, k+1)
	}
	// 初值
	f[0][0] = 1
	mod := int(1e9 + 7)

	for i := 1; i <= n; i++ {
		for j := i; j >= 0; j-- {
			for sp := 1; sp <= k; sp++ {
				if check(ss[j:i], m) {
					f[i][sp] += f[j][sp-1]
					f[i][sp] %= mod
				}
			}
		}
	}

	return f[n][k]
}

func beautifulPartitions3(s string, k int, m int) int {
	n := len(s)
	ss := []byte(s)
	f := make([][]int, n+1)
	for i := range f {
		f[i] = make([]int, k+1)
	}
	// 初值
	f[0][0] = 1
	mod := int(1e9 + 7)

	for i := 1; i <= n; i++ {
		for j := i; j >= 0; j-- {
			for sp := 1; sp <= k; sp++ {
				if check(ss[j:i], m) {
					f[i][sp] += f[j][sp-1]
					f[i][sp] %= mod
				}
			}
		}
	}

	return f[n][k]
}

// 记忆化搜索不会超时，好奇怪
func beautifulPartitions2(s string, k int, m int) int {
	n := len(s)
	ss := []byte(s)
	mod := int(1e9 + 7)
	// j 表示分成了多少段
	var dfs func(i int, j int) int
	mem := make([][]int, n+1)
	for i := range mem {
		mem[i] = make([]int, k+1)
		for j := range mem[i] {
			mem[i][j] = -1
		}
	}

	dfs = func(i int, sp int) int {
		if sp == 0 && i < 0 {
			return 1
		}
		if i < 0 || sp == 0 {
			return 0
		}

		if mem[i][sp] != -1 {
			return mem[i][sp]
		}
		ans := 0
		for j := i; j >= 0; j-- {
			if check(ss[j:i+1], m) {
				ans += dfs(j-1, sp-1)
			}
		}
		mem[i][sp] = ans % mod
		return ans % mod
	}
	ans := dfs(n-1, k)
	return ans % mod
}

func check(s []byte, m int) bool {
	if len(s) < m {
		return false
	}
	if s[0] != '2' && s[0] != '3' && s[0] != '5' && s[0] != '7' {
		return false
	}
	n := len(s)
	if s[n-1] == '2' || s[n-1] == '3' || s[n-1] == '5' || s[n-1] == '7' {
		return false
	}
	return true
}
